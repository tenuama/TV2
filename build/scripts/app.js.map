{"version":3,"sources":["app.js"],"names":["menu","gamezone","input","lazer","monsters","lazerImg","monstersImg","pewImg","pews","boomImg","frames","mframe","lvFrame","dir","globalLives","score","animate","crush","pewSound","boom","win","endGame","Menu","t","$","on","start","fadeOut","Gamezone","init","window","requestAnimationFrame","loop","canvas","cancelAnimationFrame","removeClass","text","addClass","fadeIn","play","width","height","document","createElement","context","getContext","append","img","x","y","drawImage","w","h","pew","type","draw","fillStyle","fillRect","clearRect","Img","InputHandeler","down","pressed","addEventListener","e","keyCode","code","Pew","v","wasted","updateAll","drawAll","callback","Audio","src","sprite","Image","lives","active","i","j","clear","each","index","value","save","len","length","drawPew","restore","isDown","isPressed","push","Math","random","a","round","update","screen","splice","max","min","_max","_min","checkHurt","setTimeout","end","monster","object","danger","ready"],"mappings":"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","file":"app.js","sourcesContent":["var menu, gamezone, input;\r\nvar lazer, monsters = [], lazerImg = [], monstersImg = [], pewImg, pews = [], boomImg = [];\r\nvar frames, mframe, lvFrame, dir, globalLives = 3, score = 0, animate = true;\r\nvar crush, pewSound, boom, win, endGame;\r\n\r\nclass Menu {\r\n    constructor() {\r\n        let t = this;\r\n        // $('#startgame').on('click tap', function() {\r\n        //     t.start();\r\n        // });\r\n        $('#menu').on('click tap', function() {\r\n            t.start();\r\n        });\r\n    }\r\n    start() {\r\n        $('#menu').fadeOut(function() {\r\n            gamezone = new Gamezone(640, 480);\r\n            init(function() {\r\n                window.requestAnimationFrame(loop, gamezone.canvas);\r\n            });\r\n        });\r\n    }\r\n    end() {\r\n        window.cancelAnimationFrame(loop, gamezone.canvas);\r\n        animate = false;\r\n\r\n        $('.game__start').removeClass('active');\r\n        $('.game__youscore span').text(score);\r\n        $('.game__end').addClass('active');\r\n        $('#menu').fadeIn(function() {\r\n\r\n            if (globalLives > 0) {\r\n                win.play();\r\n            } else {\r\n                endGame.play();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nclass Gamezone {\r\n    constructor(width, height) {\r\n        let t = this;\r\n        t.canvas = document.createElement(\"canvas\");\r\n        t.context = t.canvas.getContext(\"2d\");\r\n        t.canvas.width = t.width = width;\r\n        t.canvas.height = t.height = height;\r\n\r\n        $(\"#gamezone\").append(this.canvas);\r\n    }\r\n    draw(img, x, y) {\r\n        this.context.drawImage(img.img, img.x, img.y, img.w, img.h, x, y , img.w, img.h);\r\n    }\r\n    drawPew(pew) {\r\n        let t = this;\r\n\r\n        if (pew.type === \"alarm\") {\r\n            t.draw(pew.img, pew.x, pew.y);\r\n        } else {\r\n            t.context.fillStyle = \"#00fc00\";\r\n            t.context.fillRect(pew.x, pew.y, pew.w, pew.h);\r\n        }\r\n    }\r\n    clear() {\r\n        this.context.clearRect(0, 0, this.width, this.height);\r\n    }\r\n}\r\n\r\nclass Img {\r\n    constructor(img, x, y, w, h) {\r\n        let t = this;\r\n        t.img = img;\r\n        t.x = x;\r\n        t.y = y;\r\n        t.w = w;\r\n        t.h = h;\r\n    }\r\n}\r\n\r\nclass InputHandeler {\r\n    constructor() {\r\n        let t = this;\r\n        t.down = {};\r\n        t.pressed = {};\r\n\r\n        window.addEventListener(\"keydown\", function(e) {\r\n            t.down[e.keyCode] = true;\r\n        });\r\n        window.addEventListener(\"keyup\", function(e) {\r\n            delete t.down[e.keyCode];\r\n            delete t.pressed[e.keyCode];\r\n        });\r\n    }\r\n    isDown(code) {\r\n        return this.down[code];\r\n    }\r\n    isPressed(code) {\r\n        let t = this;\r\n        if (t.pressed[code]) {\r\n            return false;\r\n        } else if (t.down[code]) {\r\n            return t.pressed[code] = true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nclass Pew {\r\n    constructor(type, x, y, v) {\r\n        let t = this;\r\n        t.type = type;\r\n        t.x = x;\r\n        t.y = y;\r\n        t.v = v;\r\n        t.wasted = false;\r\n        t.w = 2;\r\n        t.h = 6;\r\n\r\n        if (t.type === \"alarm\") {\r\n            t.img = pewImg;\r\n            t.w = 12;\r\n            t.h = 16;\r\n        }\r\n    }\r\n    update() {\r\n        let t = this;\r\n        t.y += t.v;\r\n    }\r\n}\r\n\r\nvar loop = function() {\r\n    updateAll();\r\n    drawAll();\r\n    if (animate) {\r\n        window.requestAnimationFrame(loop, gamezone.canvas);\r\n    }\r\n};\r\n\r\nfunction init(callback) {\r\n\r\n    frames = 0;\r\n    mframe = 0;\r\n    lvFrame = 50;\r\n    dir = 1;\r\n\r\n    input = new InputHandeler();\r\n\r\n    crush = new Audio();\r\n    crush.src = \"./crush.mp3\";\r\n    pewSound = new Audio();\r\n    pewSound.src = \"./pew.mp3\";\r\n    boom = new Audio();\r\n    boom.src = \"./boom.mp3\";\r\n    win = new Audio();\r\n    win.src = \"./win.mp3\";\r\n    endGame = new Audio();\r\n    endGame.src = \"./endgame.mp3\";\r\n\r\n    var sprite = new Image();\r\n    sprite.src = \"./images/sprite-small2.png\";\r\n    sprite.addEventListener(\"load\", function() {\r\n\r\n        lazerImg = [new Img(this, 85, 0, 30, 20), new Img(this, 85, 20, 30, 20)];\r\n        monstersImg = [\r\n            [new Img(this, 0, 0, 28, 20), new Img(this, 0, 20, 28, 20)],\r\n            [new Img(this, 29, 0, 28, 20), new Img(this, 29, 20, 28, 20)],\r\n            [new Img(this, 57, 0, 28, 20), new Img(this, 57, 20, 28, 20)]\r\n        ];\r\n        boomImg = [new Img(this, 0, 40, 28, 20), new Img(this, 0, 40, 28, 20)];\r\n\r\n        lazer = {\r\n            img: lazerImg[0],\r\n            lives: globalLives,\r\n            x: (gamezone.width - lazerImg[0].w)/2,\r\n            y: gamezone.height - 30,\r\n            w: 28,\r\n            h: 20,\r\n            active: true\r\n        };\r\n\r\n        pewImg = new Img(this, 32, 45, 12, 16);\r\n\r\n        for (var i = 0; i < 3; i++) {\r\n            for (var j = 0; j < 10; j++) {\r\n                monsters[j + 10*i] = {\r\n                    img: monstersImg[i],\r\n                    type: i+1,\r\n                    x: 30 + 40*j,\r\n                    y: 30 + 30*i,\r\n                    w: 28,\r\n                    h: 30\r\n                }\r\n            }\r\n        }\r\n\r\n        callback(); \r\n    });\r\n\r\n   \r\n}\r\n\r\nfunction drawAll() {\r\n    gamezone.clear();\r\n    gamezone.draw(lazer.img, lazer.x, lazer.y);\r\n\r\n    $.each(monsters, function( index, value ) {\r\n      gamezone.draw(value.img[mframe], value.x, value.y);\r\n    });\r\n\r\n    gamezone.context.save();\r\n    for (var i = 0, len = pews.length; i < len; i++) {\r\n        gamezone.drawPew(pews[i]);\r\n    }\r\n    gamezone.context.restore();\r\n}\r\n\r\nfunction updateAll() {\r\n\r\n    if (lazer.active) {\r\n        if (input.isDown(37)) { //left\r\n            lazer.x -= 4;\r\n        }\r\n        if (input.isDown(39)) { //right\r\n            lazer.x += 4;\r\n        }\r\n\r\n        if (input.isPressed(32)) { //space\r\n            pews.push(new Pew(\"\", lazer.x + lazer.w/2, lazer.y + 2, -8));\r\n            pewSound.play();\r\n        }\r\n\r\n        if (Math.random() < 0.02 && monsters.length > 0) {\r\n            var a = monsters[Math.round(Math.random() * (monsters.length - 1))];\r\n            pews.push(new Pew(\"alarm\", a.x + 15, a.y + 15 + 30,  4));\r\n        }\r\n\r\n        $('#gamezone').on('tap', function() {\r\n            pews.push(new Pew(\"\", lazer.x + lazer.w/2, lazer.y + 2, -8));\r\n            pewSound.play();\r\n        })\r\n    }\r\n\r\n    $.each(pews, function( index, value ) {\r\n\r\n        if (value) {\r\n            value.update();\r\n\r\n            if (value.y  < 0 || value.y > screen.height || value.wasted) {\r\n                pews.splice(index, 1);\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n\r\n\r\n    lazer.x = Math.max(Math.min(lazer.x, gamezone.width - (30 + lazerImg[0].w)), 30);\r\n\r\n    frames++;\r\n    if (frames % lvFrame === 0) {\r\n\r\n        mframe = (mframe + 1) % 2;\r\n\r\n        var _max = 0,\r\n            _min = gamezone.width;\r\n\r\n        for (var i = 0, len = monsters.length; i < len; i++) {\r\n            var a = monsters[i];\r\n            a.x += 30 * dir;\r\n\r\n            _max = Math.max(_max, a.x + 28);\r\n            _min = Math.min(_min, a.x);\r\n        }\r\n\r\n        if (_max > gamezone.width - 30 || _min < 30) {\r\n\r\n            dir *= -1;\r\n            for (var i = 0, len = monsters.length; i < len; i++) {\r\n                monsters[i].x += 30*dir;\r\n                monsters[i].y += 30;\r\n            }\r\n        }\r\n    }\r\n\r\n    $.each(pews, function( index, pew ) {\r\n        if (pew.type === \"alarm\" && lazer.active && checkHurt(lazer, pew)) {\r\n            pew.wasted = true;\r\n            globalLives -= 1;\r\n            lazer.img = lazerImg[1];\r\n\r\n            if (globalLives > 0) {\r\n\r\n                lazer.active = false;\r\n                boom.play();\r\n\r\n                setTimeout(function(){ \r\n                    init(function() {}); \r\n                }, 2000);\r\n                \r\n            } else {\r\n                boom.play();\r\n                setTimeout(function(){ \r\n                    menu.end();\r\n                }, 2000);\r\n                \r\n            }\r\n        }\r\n\r\n        $.each(monsters, function( i, monster ) {\r\n            if (monster && pew.type === \"\" && checkHurt(monster, pew)) {\r\n                score += monster.type*10;\r\n                pew.wasted = true;\r\n                monster.img = boomImg;\r\n                crush.play();\r\n\r\n                setTimeout(function(){ \r\n                    monsters.splice(i, 1);\r\n                    if (monsters.length === 0) {\r\n                        menu.end();\r\n                    }\r\n                }, 100);\r\n            }\r\n        });\r\n\r\n    });\r\n}\r\n\r\nfunction checkHurt(object, danger) {\r\n\r\n    return ( !(danger.wasted) && (\r\n        (danger.x >= object.x - danger.w) && \r\n        (danger.x <= object.x + object.w + danger.w/2) &&\r\n        (danger.y >= object.y) && \r\n        (danger.y + danger.h <= object.y + object.h)\r\n    ) );\r\n}\r\n\r\n$(document).ready(function() {\r\n    menu = new Menu();\r\n})"],"sourceRoot":"/source/"}